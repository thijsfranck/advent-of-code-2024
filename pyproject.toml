[tool.poetry]
name = "advent-of-code-2024"
version = "0.0.0"
authors = ["Thijs Franck"]
description = "Advent of Code 2024"
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.dev-dependencies]
pre-commit = "^3.7.1"
pyright = "^1.1.373"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.14.0"
pytest-sugar = "^1.0.0"
ruff = "^0.5.2"

[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.13"
reportUnnecessaryTypeIgnoreComment = "error"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
    # Module level docstrings don't always make sense
    "D104",
    # Pyright error codes are obnoxiously long. Ignore lint telling you to use them.
    "PGH003",
    # Documenting every file is a bit redundant for us.
    "D100",
    # No point in documenting magic methods.
    "D105",
    # Makes more sense to use `Parameters` in the main class instead of in the `__init__` .
    "D107",
    # Multiline docstrings can start with a newline.
    "D212",
    # We do not need cryptographically secure random functions.
    "S311",
    # Just let us use TODOs minimally!!
    "TD003",
    "FIX002",
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/test__*.py" = ["S101", "PLR2004"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
